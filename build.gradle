buildscript {
	ext {
		kotlinVersion = '1.3.11'
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

group = 'com.github.findcoo.spring-cloud-lab'
version = '1.2'

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://maven.oracle.com" }
        maven { url 'https://jitpack.io' }
	}

	apply plugin: 'idea'

	idea {
		module {
			def kaptMain = file('build/generated/source/kapt/main')
			sourceDirs += kaptMain
			generatedSourceDirs += kaptMain
		}
	}

}

allprojects {
	apply plugin: 'kotlin'
	apply plugin: 'kotlin-spring'
	apply plugin: 'kotlin-jpa'
	apply plugin: 'kotlin-kapt'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'maven'

	task sourcesJar(type: Jar) {
		from sourceSets.main.allSource
		classifier = 'sources'
	}

	task javadocJar(type: Jar) {
		from javadoc
		classifier = 'javadoc'
	}

	test {
		useJUnitPlatform()
	}

	compileKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	compileTestKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	sourceCompatibility = 1.8
	bootJar.enabled = false
	jar.enabled = true

	dependencies {
		compile('com.fasterxml.jackson.module:jackson-module-kotlin')
		compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
		compile "org.jetbrains.kotlin:kotlin-reflect"
		kapt("org.springframework.boot:spring-boot-configuration-processor")
		runtime("com.h2database:h2")
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude module: 'junit'
		}
		testCompile("org.springframework.batch:spring-batch-test")
		testImplementation('org.junit.jupiter:junit-jupiter-api')
		testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
	}
}

subprojects {
}

project(":task") {
	dependencies {
		implementation("org.springframework.boot:spring-boot-starter-batch")
		implementation("org.springframework.cloud:spring-cloud-task-batch:2.0.0.RELEASE")
	}
}
