plugins {
  id("maven")
  id("org.springframework.boot") version "2.2.6.RELEASE"
  id("io.spring.dependency-management") version "1.0.9.RELEASE"
  id("com.palantir.docker") version "0.25.0"
  id("org.jetbrains.kotlin.jvm") version "1.3.71"
  id("org.jetbrains.kotlin.plugin.spring") version "1.3.71"
}

java.sourceCompatibility = JavaVersion.VERSION_1_8

ext {
  set("springCloudVersion", "Hoxton.SR4")
}

allprojects {
  repositories {
    jcenter()
    maven { url = "https://jitpack.io" }
  }

  group = "com.github.findcoo.spring-cloud-lab"
  version = "1.7"
}

subprojects {
  apply plugin: "maven"
  apply plugin: "kotlin"
	apply plugin: "kotlin-spring"
  apply plugin: "org.springframework.boot"
	apply plugin: "io.spring.dependency-management"

  dependencies {
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
      exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
  }

  dependencyManagement {
    imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
  }

  task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set("sources")

  }

  task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set("javadoc")
  }

  test {
    useJUnitPlatform()
  }

  compileKotlin {
    kotlinOptions {
      freeCompilerArgs = ["-Xjsr305=strict"]
      jvmTarget = "1.8"
    }
  }

  compileTestKotlin {
    kotlinOptions {
      freeCompilerArgs = ["-Xjsr305=strict"]
      jvmTarget = "1.8"
    }
  }
}

bootJar.enabled = false
jar.enabled = true
